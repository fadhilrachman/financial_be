// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User{
  id String @id @default(uuid())
  user_name String
  email String @unique
  password String
  is_super_admin Boolean @default(false)
  created_at DateTime @default(now())
  update_at DateTime @updatedAt 

  wallet Wallet[]
  category Wishlist[]
  wishlist Category[]
}


model Wallet{
  id String @id @default(uuid())
  name String
  initial_balance Int
  description String? @db.Text

  user_id String
  user User @relation(fields: [user_id], references: [id])
  transaction Transaction[]
  wishlistTransaction WishlistTransaction[]
}

model Category{
  id String @id @default(uuid())
  name String
  icon String?
  type TypeTransaction
  user_id String
  user User @relation(fields: [user_id], references: [id])
  transaction Transaction[]
}

model Transaction {
  id String @id @default(uuid())
  count Int
  description String? @db.Text
  type TypeTransaction
  date DateTime
  category_id String
  category Category @relation(fields: [category_id], references: [id])

  wallet_id String
  wallet Wallet @relation(fields: [wallet_id], references: [id])

  deleted_at DateTime?
  created_at DateTime @default(now())
  update_at DateTime @updatedAt 

}

model Wishlist {
  id String @id @default(uuid())
  target_nominal Int
  target_date DateTime
  name String

  user_id String
  user User @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  update_at DateTime @updatedAt
}

model WishlistTransaction{
  id String @id @default(uuid())
  count Int
  type TypeTransaction
  wallet_id String
  wallet Wallet @relation(fields: [wallet_id], references: [id])

  description String? @db.Text
  created_at DateTime @default(now())  
  update_at DateTime @updatedAt
}

enum TypeTransaction{
  expense
  income
}